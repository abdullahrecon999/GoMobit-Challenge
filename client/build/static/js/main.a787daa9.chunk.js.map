{"version":3,"sources":["components/sidebar/Sidebar.jsx","components/topbar/Topbar.jsx","pages/userList/UserList.jsx","pages/newUser/NewUser.jsx","App.js","index.js"],"names":["Sidebar","className","to","PermIdentity","Topbar","NotificationsNone","Language","Settings","src","alt","getData","a","fetch","method","then","response","json","result","console","log","catch","error","UserList","useState","data","setData","Copydata","setCopyData","Emaildata","setEmailData","isMountedRef","isMounted","useRef","useEffect","current","useIsMounted","resp","getEmails","get","undefined","opdata","value","label","map","val","id","push","email","name","selectedOption","setSelectedOption","isClearable","isSearchable","placeholder","defaultValue","onChange","options","onClick","filter","obj","rows","getRowId","row","_id","disableSelectionOnClick","columns","field","headerName","width","pageSize","checkboxSelection","LoginSchema","Yup","shape","required","age","min","max","NewUser","createUser","vals","headersList","bodyContent","JSON","stringify","cell","reqOptions","url","headers","axios","request","alert","window","location","href","err","initialValues","validationSchema","onSubmit","values","touched","errors","isSubmitting","type","htmlFor","style","color","component","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a787daa9.chunk.js","sourcesContent":["import \"./sidebar.css\";\nimport {\n  LineStyle,\n  Timeline,\n  TrendingUp,\n  PermIdentity,\n  Storefront,\n  AttachMoney,\n  BarChart,\n  MailOutline,\n  DynamicFeed,\n  ChatBubbleOutline,\n  WorkOutline,\n  Report,\n} from \"@material-ui/icons\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Sidebar() {\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebarWrapper\">\n        <div className=\"sidebarMenu\">\n          <h3 className=\"sidebarTitle\">Dashboard</h3>\n          <ul className=\"sidebarList\">\n            <Link to=\"/userslist\" className=\"link\">\n              <li className=\"sidebarListItem\">\n                <PermIdentity className=\"sidebarIcon\" />\n                Users Listings\n              </li>\n            </Link>\n            <Link to=\"/newUser\" className=\"link\">\n              <li className=\"sidebarListItem\">\n                <PermIdentity className=\"sidebarIcon\" />\n                Add User\n              </li>\n            </Link>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./topbar.css\";\nimport { NotificationsNone, Language, Settings } from \"@material-ui/icons\";\n\nexport default function Topbar() {\n  return (\n    <div className=\"topbar\">\n      <div className=\"topbarWrapper\">\n        <div className=\"topLeft\">\n          <span className=\"logo\">Admin Dashboard</span>\n        </div>\n        <div className=\"topRight\">\n          <div className=\"topbarIconContainer\">\n            <NotificationsNone />\n            <span className=\"topIconBadge\">2</span>\n          </div>\n          <div className=\"topbarIconContainer\">\n            <Language />\n            <span className=\"topIconBadge\">2</span>\n          </div>\n          <div className=\"topbarIconContainer\">\n            <Settings />\n          </div>\n          <img src=\"https://w7.pngwing.com/pngs/81/570/png-transparent-profile-logo-computer-icons-user-user-blue-heroes-logo-thumbnail.png\" alt=\"\" className=\"topAvatar\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import \"./userList.css\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport {useState, useEffect, useRef} from 'react';\nimport Select from 'react-select'\n\nfunction useIsMounted() {\n  const isMounted = useRef(false);\n\n  useEffect(() => {\n    isMounted.current = true;\n\n    return () => {\n      isMounted.current = false;\n    };\n  });\n\n  return isMounted;\n}\n\nconst getData = async () => {\n    \n  return await fetch(\"http://3.82.230.24:8081/users/GetUsers\", {method:'GET'})\n    .then(response => response.json())\n    .then(result => {\n      console.log(result)\n      return result\n    }).catch(error => console.log('error', error));\n}\n\nexport default function UserList() {\n  const [data, setData] = useState();\n  const [Copydata, setCopyData] = useState();\n  const [Emaildata, setEmailData] = useState(null);\n\n  const isMountedRef = useIsMounted();\n\n  useEffect(() => {\n    // load data from db\n    async function get(){\n      let resp = await getData()\n      if (isMountedRef.current){\n        setData(resp)\n        getEmails()\n        setCopyData(resp)\n      }\n    }\n    get()\n    \n  }, [isMountedRef])\n\n  useEffect(()=>{\n    getEmails()\n  },[data])\n\n  const columns = [\n    { field: \"_id\", headerName: \"ID\", width: 200 },\n    {\n      field: \"name\",\n      headerName: \"name\",\n      width: 190,\n    },\n    { field: \"email\", headerName: \"Email\", width: 250 },\n    {\n      field: \"cellno\",\n      headerName: \"cell_no\",\n      width: 150,\n    },\n    {\n      field: \"createdAt\",\n      headerName: \"Created_At\",\n      width: 200,\n    },\n    {\n      field: \"is Deleted\",\n      headerName: \"is Deleted\",\n      width: 140,\n    },\n  ];\n\n  const getEmails = () => {\n    if(data != undefined){\n      let opdata=[{value:'all', label:'All'}]\n      data.map((val, id) => {\n        opdata.push({value:val.email, label:val.name})\n      })\n      console.log(opdata)\n      setEmailData(opdata)\n    }\n  }\n\n  const [selectedOption, setSelectedOption] = useState(null);\n\n  const filterData = () => {\n    console.log(selectedOption)\n    \n    if (selectedOption.value == 'all'){\n      setData(Copydata)\n    }\n    else {\n      setData(Copydata.filter((obj) => obj.email == selectedOption.value))\n    }\n    console.log(data)\n  }\n\n  return (\n    <div className=\"userList\">\n      <h3>Search User</h3>\n\n      {(Emaildata != null)? (<Select\n        name=\"Users\"\n        isClearable=\"true\"\n        isSearchable=\"true\"\n        placeholder=\"Users\"\n        defaultValue={{ label: \"All\", value: \"All\" }}\n        onChange={setSelectedOption}\n        options={Emaildata}\n      />) : (<p>Loading</p>)}\n      \n      <button onClick={()=>{filterData()}}>Search</button>\n\n      {(data != undefined)? ((data[0] != undefined)? (\n        <DataGrid\n        rows={data}\n        getRowId ={(row) => row._id}\n        disableSelectionOnClick\n        columns={columns}\n        pageSize={8}\n        checkboxSelection\n      />\n      ) : (<p>{console.log('waiting')}</p>)):(<p>{console.log('waitkjs')}</p>)}\n      \n    </div>\n  );\n}\n","import \"./newUser.css\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from 'axios';\n\nconst LoginSchema = Yup.object().shape({\n  email: Yup.string()\n    .email(\"Invalid email address format\")\n    .required(\"Email is required\"),\n  age: Yup.number()\n    .min(18, \"Age must be between 18 and 60\")\n    .max(60, \"Age must be between 18 and 60\")\n    .required(\"Age is required\"),\n});\n\nexport default function NewUser() {\n\n  const createUser = async (vals) => {\n  \n      let headersList = {\n        \"Accept\": \"*/*\",\n        \"Content-Type\": \"application/json\" \n       }\n       \n       let bodyContent = JSON.stringify({\n         \"name\":vals.name,\n         \"email\":vals.email,\n         \"cellno\":vals.cell,\n         \"age\":vals.age\n       });\n       \n       let reqOptions = {\n         url: \"http://3.82.230.24:8081/users/AddUser\",\n         method: \"POST\",\n         headers: headersList,\n         data: bodyContent,\n       }\n  \n      await axios.request(reqOptions).then(()=>{\n        alert('User created Successfully')\n        // redirect\n        window.location.href = '/users'\n      }).catch((err)=>alert(err + \" User Already Exists\"));\n  }  \n\n  return (\n    <div className=\"newUser\">\n      <h1 className=\"newUserTitle\">New User</h1>\n      <Formik\n              initialValues={{ name:\"\", email: \"\", age: \"\", cell:\"\" }}\n              validationSchema={LoginSchema}\n              onSubmit={(values) => {\n                console.log(values);\n                createUser(values)\n              }}\n            >\n              {({ touched, errors, isSubmitting, values }) =>(\n                  <div>\n                    <div className=\"row mb-5\">\n                    </div>\n                    <Form>\n                      <div className=\"newUserItem\">\n                        <label>Name</label>\n                        <Field type=\"text\" placeholder=\"john\" name=\"name\"/>\n                      </div>\n\n                      <div className=\"newUserItem\">\n                        <label htmlFor=\"email\">Email</label>\n                        <Field\n                          type=\"email\"\n                          name=\"email\"\n                          placeholder=\"Enter email\"\n                          className={`mt-2 form-control\n                          ${touched.email && errors.email ? \"is-invalid\" : \"\"}`}\n                        />\n\n                        <div style={{color:'red'}}>\n                          <ErrorMessage\n                            component=\"div\"\n                            name=\"email\"\n                            color=\"red\"\n                            className=\"invalid-feedback\"\n                          />\n                        </div>\n                      </div>\n  \n                      <div className=\"newUserItem\">\n                        <label htmlFor=\"age\" className=\"mt-3\">\n                          Age\n                        </label>\n                        <Field\n                          type=\"number\"\n                          name=\"age\"\n                          placeholder=\"Enter Age\"\n                          className={`mt-2 form-control\n                          ${\n                            touched.age && errors.age\n                              ? \"is-invalid\"\n                              : \"\"\n                          }`}\n                        />\n                        <div style={{color:'red'}}>\n                          <ErrorMessage\n                            component=\"div\"\n                            name=\"age\"\n                            className=\"invalid-feedback\"\n                          />\n                        </div>\n                      </div>\n\n                      <div className=\"newUserItem\">\n                        <label>Cell no.</label>\n                        <Field type=\"text\" placeholder=\"+1 247 588 966\" name=\"cell\"/>\n                      </div>\n  \n                      <button\n                        type=\"submit\"\n                        className=\"newUserButton\"\n                      >\n                        Submit\n                      </button>\n                    </Form>\n                  </div>\n              )\n              }\n            </Formik>\n    </div>\n  );\n}\n","import Sidebar from \"./components/sidebar/Sidebar\";\nimport Topbar from \"./components/topbar/Topbar\";\nimport \"./App.css\";\nimport Home from \"./pages/home/Home\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport UserList from \"./pages/userList/UserList\";\nimport User from \"./pages/user/User\";\nimport NewUser from \"./pages/newUser/NewUser\";\n\nfunction App() {\n  return (\n    <Router>\n      <Topbar />\n      <div className=\"container\">\n        <Sidebar />\n        <Switch>\n          <Route exact path=\"/\">\n            <UserList />\n          </Route>\n          <Route path=\"/userslist\">\n            <UserList />\n          </Route>\n          <Route path=\"/newUser\">\n            <NewUser />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}